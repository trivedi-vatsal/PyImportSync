name: Test PyImportSync with All Flags

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-all-flags:
    name: Test All Flags Enabled
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Test with All Flags Enabled
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: 'requirements.txt'
          ignore-dirs: 'tests,docs,examples,scripts'
          fail-on-missing: true
          output-file: 'missing-dependencies.txt'
          use-pipreqs: true
          respect-gitignore: true

      - name: Upload Missing Dependencies Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: missing-dependencies-report
          path: missing-dependencies.txt
          retention-days: 30

  test-strict-mode:
    name: Test Strict Mode (Fail on Missing)
    runs-on: ubuntu-latest
    needs: test-all-flags
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Strict Mode
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: 'src'
          requirements-file: '../requirements.txt'
          ignore-dirs: '__pycache__,*.pyc'
          fail-on-missing: true
          use-pipreqs: true
          respect-gitignore: true

  test-permissive-mode:
    name: Test Permissive Mode (Don't Fail on Missing)
    runs-on: ubuntu-latest
    needs: test-strict-mode
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Permissive Mode
        id: permissive-check
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: 'requirements.txt'
          ignore-dirs: 'tests,docs,examples'
          fail-on-missing: false
          output-file: 'permissive-missing-deps.txt'
          use-pipreqs: true
          respect-gitignore: true

      - name: Check Outputs
        run: |
          echo "Missing dependencies: ${{ steps.permissive-check.outputs.missing-dependencies }}"
          echo "Missing count: ${{ steps.permissive-check.outputs.missing-count }}"
          echo "Status: ${{ steps.permissive-check.outputs.status }}"

  test-without-pipreqs:
    name: Test Without Pipreqs
    runs-on: ubuntu-latest
    needs: test-permissive-mode
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Without Pipreqs
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: 'requirements.txt'
          fail-on-missing: false
          use-pipreqs: false
          respect-gitignore: true

  test-ignore-gitignore:
    name: Test Ignoring Gitignore
    runs-on: ubuntu-latest
    needs: test-without-pipreqs
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Ignoring Gitignore
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: 'requirements.txt'
          fail-on-missing: false
          use-pipreqs: true
          respect-gitignore: false

  test-multiple-requirements:
    name: Test Multiple Requirements Files
    runs-on: ubuntu-latest
    needs: test-ignore-gitignore
    strategy:
      matrix:
        requirements-file: ['requirements.txt', 'django_example/requirements.txt']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test with ${{ matrix.requirements-file }}
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: ${{ matrix.requirements-file }}
          ignore-dirs: 'tests,docs,examples,scripts,__pycache__'
          fail-on-missing: false
          output-file: 'missing-${{ matrix.requirements-file }}.txt'
          use-pipreqs: true
          respect-gitignore: true

      - name: Upload Matrix Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: missing-deps-${{ strategy.job-index }}
          path: 'missing-${{ matrix.requirements-file }}.txt'
          retention-days: 7

  test-edge-cases:
    name: Test Edge Cases
    runs-on: ubuntu-latest
    needs: test-multiple-requirements
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test with Non-existent Requirements File
        continue-on-error: true
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: 'non-existent-requirements.txt'
          fail-on-missing: false

      - name: Test with Empty Ignore Dirs
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: 'requirements.txt'
          ignore-dirs: ''
          fail-on-missing: false
          use-pipreqs: true
          respect-gitignore: true

      - name: Test Django Example Project
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: 'django_example'
          requirements-file: 'requirements.txt'
          ignore-dirs: '__pycache__,migrations'
          fail-on-missing: false
          output-file: 'django-missing-deps.txt'
          use-pipreqs: true
          respect-gitignore: true

      - name: Upload Django Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: django-test-results
          path: django_example/django-missing-deps.txt
          retention-days: 7

  test-output-parsing:
    name: Test Output Parsing
    runs-on: ubuntu-latest
    needs: test-edge-cases
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Dependency Check
        id: dep-check
        uses: trivedi-vatsal/PyImportSync@v1.0.0
        with:
          project-path: '.'
          requirements-file: 'requirements.txt'
          fail-on-missing: false
          output-file: 'detailed-missing-deps.txt'
          use-pipreqs: true
          respect-gitignore: true

      - name: Parse and Display Outputs
        run: |
          echo "=== Dependency Check Results ==="
          echo "Missing Dependencies:"
          echo "${{ steps.dep-check.outputs.missing-dependencies }}"
          echo ""
          echo "Missing Count: ${{ steps.dep-check.outputs.missing-count }}"
          echo "Status: ${{ steps.dep-check.outputs.status }}"
          echo ""
          echo "=== Output File Contents ==="
          if [ -f "detailed-missing-deps.txt" ]; then
            cat detailed-missing-deps.txt
          else
            echo "No output file generated"
          fi

      - name: Create Summary
        run: |
          echo "## PyImportSync Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Missing Dependencies | ${{ steps.dep-check.outputs.missing-count }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Status | ${{ steps.dep-check.outputs.status }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f "detailed-missing-deps.txt" ]; then
            echo "### Detailed Results" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat detailed-missing-deps.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Detailed Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detailed-test-results
          path: detailed-missing-deps.txt
          retention-days: 30